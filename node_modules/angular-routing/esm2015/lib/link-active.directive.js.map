{"version":3,"file":"link-active.directive.js","sourceRoot":"ng://angular-routing/","sources":["lib/link-active.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { LinkTo } from './link-to.directive';\nimport { Router } from './router.service';\nimport { combineLatest, of, Subject, Subscription } from 'rxjs';\nimport { map, mapTo, startWith, takeUntil } from 'rxjs/operators';\n\nexport interface LinkActiveOptions {\n  exact: boolean;\n}\n\nexport const LINK_ACTIVE_OPTIONS: LinkActiveOptions = {\n  exact: true,\n};\n\n/**\n * The LinkActive directive toggles classes on elements that contain an active linkTo directive\n *\n * <a linkActive=\"active\" linkTo=\"/home/page\">Home Page</a>\n * <ol>\n *  <li linkActive=\"active\" *ngFor=\"var link of links\">\n *    <a [linkTo]=\"'/link/' + link.id\">{{ link.title }}</a>\n *  </li>\n * </ol>\n */\n@Directive({ selector: '[linkActive]' })\nexport class LinkActive implements AfterContentInit, OnDestroy, OnChanges {\n  @ContentChildren(LinkTo, { descendants: true }) public links: QueryList<\n    LinkTo\n  >;\n  @Input('linkActive') activeClass = 'active';\n  @Input() activeOptions: LinkActiveOptions;\n  private _activeOptions: LinkActiveOptions = { exact: true };\n  private _destroy$ = new Subject();\n  private _linksSub!: Subscription;\n\n  constructor(\n    public element: ElementRef,\n    public router: Router,\n    public renderer: Renderer2,\n    @Optional()\n    @Inject(LINK_ACTIVE_OPTIONS)\n    private defaultActiveOptions: LinkActiveOptions,\n    @Optional() private link: LinkTo\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.defaultActiveOptions && !this.activeOptions) {\n      this._activeOptions = this.defaultActiveOptions;\n    } else if (this.activeOptions) {\n      this._activeOptions = this.activeOptions;\n    }\n\n    this.links.changes.subscribe(() => this.collectLinks());\n    this.collectLinks();\n  }\n\n  ngOnChanges() {\n    this.collectLinks();\n  }\n\n  collectLinks() {\n    if (this._linksSub) {\n      this._linksSub.unsubscribe();\n    }\n\n    const contentLinks$ = this.links\n      ? this.links\n          .toArray()\n          .map((link) =>\n            link.hrefUpdated.pipe(\n              startWith(link.linkHref),\n              mapTo(link.linkHref)\n            )\n          )\n      : [];\n    const link$ = this.link\n      ? this.link.hrefUpdated.pipe(\n          startWith(this.link.linkHref),\n          mapTo(this.link.linkHref)\n        )\n      : of('');\n    const router$ = this.router.url$.pipe(\n      map((path) => this.router.getExternalUrl(path || '/'))\n    );\n\n    const observables$ = [router$, link$, ...contentLinks$];\n\n    this._linksSub = combineLatest(observables$)\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(([path, link, ...links]) => {\n        this.checkActive([...links, link], path);\n      });\n  }\n\n  checkActive(linkHrefs: string[], path: string) {\n    const active = linkHrefs.reduce((isActive, current) => {\n      const [href] = current.split('?');\n\n      if (this._activeOptions.exact) {\n        isActive = isActive ? isActive : href === path;\n      } else {\n        isActive = isActive ? isActive : path.startsWith(href);\n      }\n\n      return isActive;\n    }, false);\n\n    this.updateClasses(active);\n  }\n\n  updateClasses(active: boolean) {\n    const activeClasses = this.activeClass.split(' ');\n    activeClasses.forEach((activeClass) => {\n      if (active) {\n        this.renderer.addClass(this.element.nativeElement, activeClass);\n      } else {\n        this.renderer.removeClass(this.element.nativeElement, activeClass);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n  }\n}\n"]}