{"version":3,"file":"url-parser.js","sourceRoot":"ng://angular-routing/","sources":["lib/url-parser.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,IAAa,SAAS,GAAtB,MAAa,SAAS;IACpB,KAAK,CAAC,GAAW,EAAE,IAAmB;QACpC,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAC3B;QACD,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,QAAQ,CAAC,UAAkB,EAAE,GAAW;QACtC,MAAM,kBAAkB,GAAG,UAAU;aAClC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc;aAC5B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB;aACpC,KAAK,CAAC,GAAG,CAAC,CAAC;QACd,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEnC,OAAO,WAAW;aACf,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;YAC5B,IAAI,OAAO,KAAK,GAAG,EAAE;gBACnB,OAAO,QAAQ,CAAC;aACjB;YACD,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aAC9B;YACD,OAAO,CAAC,GAAG,QAAQ,EAAE,OAAO,CAAC,CAAC;QAChC,CAAC,EAAE,kBAAkB,CAAC;aACrB,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;CACF,CAAA;AA3BY,SAAS;IADrB,UAAU,EAAE;GACA,SAAS,CA2BrB;SA3BY,SAAS","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlParser {\n  parse(url: string, base?: string | URL): URL {\n    if (base) {\n      return new URL(url, base);\n    }\n    return new URL(url);\n  }\n\n  joinUrls(currentUrl: string, url: string): string {\n    const currentUrlSegments = currentUrl\n      .split('#')[0] // remove hash\n      .split('?')[0] // remove query params\n      .split('/');\n    const urlSegments = url.split('/');\n\n    return urlSegments\n      .reduce((segments, segment) => {\n        if (segment === '.') {\n          return segments;\n        }\n        if (segment === '..') {\n          return segments.slice(0, -1);\n        }\n        return [...segments, segment];\n      }, currentUrlSegments)\n      .join('/');\n  }\n}\n"]}