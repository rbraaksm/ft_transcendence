"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const testing_1 = require("@angular-devkit/schematics/testing");
const path = require("path");
exports.workspaceOptions = {
    name: 'workspace',
    newProjectRoot: 'projects',
    version: '6.0.0',
    defaultProject: 'bar',
};
exports.defaultAppOptions = {
    name: 'bar',
    inlineStyle: false,
    inlineTemplate: false,
    viewEncapsulation: 'Emulated',
    routing: false,
    style: 'css',
    skipTests: false,
};
const collectionPath = path.join(__dirname, '../collection.json');
describe('ng add function', () => {
    let appTree;
    let schematicRunner;
    const defaultOptions = {
        project: 'bar',
        module: 'app',
    };
    beforeEach(() => __awaiter(void 0, void 0, void 0, function* () {
        schematicRunner = new testing_1.SchematicTestRunner('angular-routing', collectionPath);
        appTree = yield schematicRunner
            .runExternalSchematicAsync('@schematics/angular', 'workspace', exports.workspaceOptions)
            .toPromise();
        appTree = yield schematicRunner
            .runExternalSchematicAsync('@schematics/angular', 'application', exports.defaultAppOptions, appTree)
            .toPromise();
    }));
    it('should import RouterModule a specified module', () => __awaiter(void 0, void 0, void 0, function* () {
        const options = Object.assign({}, defaultOptions);
        const tree = yield schematicRunner
            .runSchematicAsync('ng-add', options, appTree)
            .toPromise();
        const content = tree.readContent(`/projects/bar/src/app/app.module.ts`);
        expect(content).toContain('RoutingModule.forRoot()');
    }));
});
//# sourceMappingURL=index.spec.js.map