import { OnInit, Type, ViewContainerRef, ComponentFactoryResolver, TemplateRef, Compiler, OnDestroy } from '@angular/core';
import { Load, Route, RouteOptions } from './route';
import { Params } from './route-params.service';
import { RouterComponent } from './router.component';
import { Router } from './router.service';
export declare function getRouteParams(routeComponent: RouteComponent): import("rxjs").Observable<Params>;
export declare function getRoutePath(routeComponent: RouteComponent): import("rxjs").Observable<string>;
export declare class RouteComponent implements OnInit, OnDestroy {
    private router;
    private routerComponent;
    private resolver;
    private viewContainerRef;
    private compiler;
    template: TemplateRef<any> | null;
    get path(): string;
    set path(value: string);
    component: Type<any>;
    load: Load;
    reuse: boolean;
    redirectTo: string;
    exact: boolean;
    routeOptions: RouteOptions;
    private _path;
    private destroy$;
    private readonly state$;
    readonly shouldRender$: import("rxjs").Observable<boolean>;
    readonly routeParams$: import("rxjs").Observable<Params>;
    readonly routePath$: import("rxjs").Observable<string>;
    route: Route;
    constructor(router: Router, routerComponent: RouterComponent, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, compiler: Compiler);
    ngOnInit(): void;
    ngOnDestroy(): void;
    registerRoute(path: string, exact: boolean, load: Load): Route;
    private loadAndRender;
    private renderComponent;
    private clearComponent;
    private showTemplate;
    private hideTemplate;
    private clearView;
    private sanitizePath;
    private updateState;
}
