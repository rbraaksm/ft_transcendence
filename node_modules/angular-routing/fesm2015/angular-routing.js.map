{"version":3,"file":"angular-routing.js","sources":["ng://angular-routing/lib/url-parser.ts","ng://angular-routing/lib/route-params.service.ts","ng://angular-routing/lib/router.service.ts","ng://angular-routing/lib/link-to.directive.ts","ng://angular-routing/lib/link-active.directive.ts","ng://angular-routing/lib/route-component.directive.ts","ng://angular-routing/lib/utils/path-parser.ts","ng://angular-routing/lib/utils/compare-routes.ts","ng://angular-routing/lib/router.component.ts","ng://angular-routing/lib/route.component.ts","ng://angular-routing/lib/router.module.ts","ng://angular-routing/index.ts","ng://angular-routing/angular-routing.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlParser {\n  parse(url: string, base?: string | URL): URL {\n    if (base) {\n      return new URL(url, base);\n    }\n    return new URL(url);\n  }\n\n  joinUrls(currentUrl: string, url: string): string {\n    const currentUrlSegments = currentUrl\n      .split('#')[0] // remove hash\n      .split('?')[0] // remove query params\n      .split('/');\n    const urlSegments = url.split('/');\n\n    return urlSegments\n      .reduce((segments, segment) => {\n        if (segment === '.') {\n          return segments;\n        }\n        if (segment === '..') {\n          return segments.slice(0, -1);\n        }\n        return [...segments, segment];\n      }, currentUrlSegments)\n      .join('/');\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport interface Params {\n  [param: string]: any;\n}\n\nexport class RoutePath<T extends string = string> extends Observable<T> {}\n\nexport class RouteParams<T extends Params = Params> extends Observable<T> {}\n\nexport class QueryParams<T extends Params = Params> extends Observable<T> {}\n\nexport function compareParams(previous: Params, current: Params): boolean {\n  return (\n    previous === current || JSON.stringify(previous) === JSON.stringify(current)\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { PlatformLocation, Location } from '@angular/common';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport * as queryString from 'query-string';\n\nimport { UrlParser } from './url-parser';\nimport { Params, compareParams } from './route-params.service';\n\ninterface State {\n  url: string;\n  queryParams: Params;\n  hash: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Router {\n  private readonly state$ = new BehaviorSubject<State>({\n    url: this.location.path(),\n    queryParams: {},\n    hash: '',\n  });\n\n  readonly url$ = this.state$.pipe(\n    map((state) => state.url),\n    distinctUntilChanged()\n  );\n  readonly hash$ = this.state$.pipe(\n    map((state) => state.hash),\n    distinctUntilChanged()\n  );\n  readonly queryParams$ = this.state$.pipe(\n    map((state) => state.queryParams),\n    distinctUntilChanged(compareParams)\n  );\n\n  constructor(\n    private location: Location,\n    private platformLocation: PlatformLocation,\n    private urlParser: UrlParser\n  ) {\n    this.location.subscribe(() => {\n      this.nextState(this.getLocation());\n    });\n\n    this.nextState(this.getLocation());\n  }\n\n  go(url: string, queryParams?: Params, hash?: string) {\n    this.location.go(this.serializeUrl(url, queryParams, hash));\n\n    this.nextState(this.getLocation());\n  }\n\n  replace(url: string, queryParams?: Params, hash?: string) {\n    this.location.replaceState(this.serializeUrl(url, queryParams, hash));\n\n    this.nextState(this.getLocation());\n  }\n\n  serializeUrl(url: string, queryParams?: Params, hash?: string) {\n    // if relative path\n    if (!url.startsWith('/')) {\n      url = this.urlParser.joinUrls(this.location.path(), url);\n    }\n\n    return (\n      url +\n      (queryParams ? `?${queryString.stringify(queryParams)}` : '') +\n      `${hash ? '#' + hash : ''}`\n    );\n  }\n\n  getExternalUrl(url: string) {\n    return this.location.prepareExternalUrl(url);\n  }\n\n  parseSearchParams(searchParams: URLSearchParams) {\n    const queryParams: Params = {};\n\n    searchParams.forEach((value, key) => {\n      queryParams[key] = value;\n    });\n\n    return queryParams;\n  }\n\n  normalizePath(path: string) {\n    return this.location.normalize(path);\n  }\n\n  private getLocation() {\n    return this.platformLocation.href;\n  }\n\n  private nextState(url: string) {\n    const parsedUrl = this._parseUrl(url);\n\n    this.state$.next({\n      url: parsedUrl.pathname,\n      queryParams: this.parseSearchParams(parsedUrl.searchParams),\n      hash: parsedUrl.hash ? parsedUrl.hash.split('#')[0] : '',\n    });\n  }\n\n  private _parseUrl(path: string): URL {\n    return this.urlParser.parse(path);\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { Router } from './router.service';\nimport { Params } from './route-params.service';\n\nconst DEFAULT_TARGET = '_self';\n\n/**\n * The LinkTo directive links to routes in your app\n *\n * Links are pushed to the `Router` service to trigger a route change.\n * Query params can be represented as an object or a string of names/values\n *\n * <a linkTo=\"/home/page\" [queryParams]=\"{ id: 123 }\">Home Page</a>\n * <a [linkTo]=\"'/pages' + page.id\">Page 1</a>\n */\n@Directive({ selector: 'a[linkTo]' })\nexport class LinkTo {\n  @Input() target = DEFAULT_TARGET;\n  @HostBinding('href') linkHref: string;\n\n  @Input() set linkTo(href: string) {\n    this._href = href;\n    this._updateHref();\n  }\n\n  @Input() set queryParams(params: Params) {\n    this._query = params;\n    this._updateHref();\n  }\n\n  @Input() set fragment(hash: string) {\n    this._hash = hash;\n    this._updateHref();\n  }\n\n  @Output() hrefUpdated: EventEmitter<string> = new EventEmitter<string>();\n\n  private _href: string;\n  private _query: Params;\n  private _hash: string;\n\n  constructor(private router: Router) {}\n\n  /**\n   * Handles click events on the associated link\n   * Prevents default action for non-combination click events without a target\n   */\n  @HostListener('click', ['$event'])\n  onClick(event: any) {\n    if (!this._comboClick(event) && this.target === DEFAULT_TARGET) {\n      this.router.go(this._href, this._query, this._hash);\n\n      event.preventDefault();\n    }\n  }\n\n  private _updateHref() {\n    const href = this._cleanUpHref(this._href);\n\n    this.linkHref = this.router.serializeUrl(href, this._query, this._hash);\n\n    this.hrefUpdated.emit(this.linkHref);\n  }\n\n  /**\n   * Determines whether the click event happened with a combination of other keys\n   */\n  private _comboClick(event) {\n    const buttonEvent = event.which || event.button;\n\n    return buttonEvent > 1 || event.ctrlKey || event.metaKey || event.shiftKey;\n  }\n\n  private _cleanUpHref(href: string = ''): string {\n    // Trim whitespaces and remove trailing slashes\n    return href.trim().replace(/[\\/]+$/, '');\n  }\n}\n","import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { LinkTo } from './link-to.directive';\nimport { Router } from './router.service';\nimport { combineLatest, of, Subject, Subscription } from 'rxjs';\nimport { map, mapTo, startWith, takeUntil } from 'rxjs/operators';\n\nexport interface LinkActiveOptions {\n  exact: boolean;\n}\n\nexport const LINK_ACTIVE_OPTIONS: LinkActiveOptions = {\n  exact: true,\n};\n\n/**\n * The LinkActive directive toggles classes on elements that contain an active linkTo directive\n *\n * <a linkActive=\"active\" linkTo=\"/home/page\">Home Page</a>\n * <ol>\n *  <li linkActive=\"active\" *ngFor=\"var link of links\">\n *    <a [linkTo]=\"'/link/' + link.id\">{{ link.title }}</a>\n *  </li>\n * </ol>\n */\n@Directive({ selector: '[linkActive]' })\nexport class LinkActive implements AfterContentInit, OnDestroy, OnChanges {\n  @ContentChildren(LinkTo, { descendants: true }) public links: QueryList<\n    LinkTo\n  >;\n  @Input('linkActive') activeClass = 'active';\n  @Input() activeOptions: LinkActiveOptions;\n  private _activeOptions: LinkActiveOptions = { exact: true };\n  private _destroy$ = new Subject();\n  private _linksSub!: Subscription;\n\n  constructor(\n    public element: ElementRef,\n    public router: Router,\n    public renderer: Renderer2,\n    @Optional()\n    @Inject(LINK_ACTIVE_OPTIONS)\n    private defaultActiveOptions: LinkActiveOptions,\n    @Optional() private link: LinkTo\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.defaultActiveOptions && !this.activeOptions) {\n      this._activeOptions = this.defaultActiveOptions;\n    } else if (this.activeOptions) {\n      this._activeOptions = this.activeOptions;\n    }\n\n    this.links.changes.subscribe(() => this.collectLinks());\n    this.collectLinks();\n  }\n\n  ngOnChanges() {\n    this.collectLinks();\n  }\n\n  collectLinks() {\n    if (this._linksSub) {\n      this._linksSub.unsubscribe();\n    }\n\n    const contentLinks$ = this.links\n      ? this.links\n          .toArray()\n          .map((link) =>\n            link.hrefUpdated.pipe(\n              startWith(link.linkHref),\n              mapTo(link.linkHref)\n            )\n          )\n      : [];\n    const link$ = this.link\n      ? this.link.hrefUpdated.pipe(\n          startWith(this.link.linkHref),\n          mapTo(this.link.linkHref)\n        )\n      : of('');\n    const router$ = this.router.url$.pipe(\n      map((path) => this.router.getExternalUrl(path || '/'))\n    );\n\n    const observables$ = [router$, link$, ...contentLinks$];\n\n    this._linksSub = combineLatest(observables$)\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(([path, link, ...links]) => {\n        this.checkActive([...links, link], path);\n      });\n  }\n\n  checkActive(linkHrefs: string[], path: string) {\n    const active = linkHrefs.reduce((isActive, current) => {\n      const [href] = current.split('?');\n\n      if (this._activeOptions.exact) {\n        isActive = isActive ? isActive : href === path;\n      } else {\n        isActive = isActive ? isActive : path.startsWith(href);\n      }\n\n      return isActive;\n    }, false);\n\n    this.updateClasses(active);\n  }\n\n  updateClasses(active: boolean) {\n    const activeClasses = this.activeClass.split(' ');\n    activeClasses.forEach((activeClass) => {\n      if (active) {\n        this.renderer.addClass(this.element.nativeElement, activeClass);\n      } else {\n        this.renderer.removeClass(this.element.nativeElement, activeClass);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[routeComponent]',\n})\nexport class RouteComponentTemplate {\n  @Input() routeComponent: any;\n}\n","import { Route } from '../route';\nimport { Params } from '../route-params.service';\n\nconst PARAM_PREFIX = ':';\n\nexport interface RouteMatch {\n  path: string;\n  params: Params;\n}\n\nconst DIV = '\\\\/'; // /\nconst DIV_PARAM = `(?:${DIV}([^\\\\/#\\\\?]+?))`; // capturing group for one or more of not (/, # or ?), optional (TODO: check if optional is needed)\nconst PATH_END = '[\\\\/#\\\\?]'; // path end: /, # or ?\nconst END = '[]|$'; // null or end\nconst EXACT_END = `${PATH_END}?$`; // match PATH_END optionally and END\nconst WILDCARD = `(?:${PATH_END}(?=${END}))?`; // match optionally PATH_END followed by END\nconst NON_EXACT_END = `${WILDCARD}(?=${PATH_END}|${END})`; // match WILDCARD followed by PATH_END or END\n\nexport function getPathSegments(route: Route): string[] {\n  const sanitizedPath = route.path.replace(/^\\//, '').replace(/(?:\\/$)/, '');\n  return sanitizedPath ? sanitizedPath.split('/') : [];\n}\n\nexport const parsePath = (route: Route): RegExp => {\n  const segments = getPathSegments(route);\n  const regexBody = segments.reduce(\n    (acc, segment) =>\n      segment.startsWith(PARAM_PREFIX)\n        ? `${acc}${DIV_PARAM}`\n        : `${acc}${DIV}${segment}`,\n    ''\n  );\n\n  if (route.options.exact ?? true) {\n    return new RegExp(`^${regexBody}${EXACT_END}`, 'i');\n  } else {\n    return new RegExp(\n      `^${regexBody}${regexBody ? NON_EXACT_END : WILDCARD}`,\n      'i'\n    );\n  }\n};\n\nexport const matchRoute = (\n  url: string,\n  route: Route\n): RouteMatch | undefined => {\n  const match = route.matcher?.exec(url);\n  if (!match) {\n    return;\n  }\n  const keys = getPathSegments(route)\n    .filter((s) => s.startsWith(PARAM_PREFIX))\n    .map((s) => s.slice(1));\n\n  return {\n    path: match[0],\n    params: keys.reduce(\n      (acc, key, index) => ({ ...acc, [key]: match[index + 1] }),\n      {}\n    ),\n  };\n};\n","import { Route } from '../route';\nimport { getPathSegments } from './path-parser';\n\n/**\n * Compares two routes and returns sorting number\n * 0 - equal\n * -1 - `a` has priority over `b`\n * 1 - `b` has priority over `a`\n *\n * @param a Route\n * @param b Route\n */\nexport const compareRoutes = (a: Route, b: Route): number => {\n  // as matchers combine normalized path and `exact` option it's safe to compare regexps\n  if (a.matcher.toString() === b.matcher.toString()) {\n    return 0;\n  }\n  const aSegments = getPathSegments(a);\n  const bSegments = getPathSegments(b);\n\n  for (let i = 0; i < Math.max(aSegments.length, bSegments.length); i++) {\n    const current = compareSegments(aSegments, bSegments, i);\n    if (current) {\n      return current;\n    }\n  }\n  // when paths are same, exact has priority\n  return a.options.exact ?? true ? -1 : 1;\n};\n\nfunction compareSegments(\n  aSegments: string[],\n  bSegments: string[],\n  index: number\n): number {\n  // if a has no more segments -> return 1\n  if (aSegments.length <= index) {\n    return 1;\n  }\n  // if b has no more segments -> return -1\n  if (bSegments.length <= index) {\n    return -1;\n  }\n  if (aSegments[index] === bSegments[index]) {\n    return 0;\n  }\n  // prioritize non-empty path over empty\n  if (!aSegments[index]) {\n    return 1;\n  }\n  if (!bSegments[index]) {\n    return -1;\n  }\n  // ignore param names\n  if (isParam(aSegments[index]) && isParam(bSegments[index])) {\n    return 0;\n  }\n  // static segment has priority over param\n  if (isParam(aSegments[index])) {\n    return 1;\n  }\n  if (isParam(bSegments[index])) {\n    return -1;\n  }\n  // when all is same run string comparison\n  return aSegments[index].localeCompare(bSegments[index]);\n}\n\nfunction isParam(segment: string): boolean {\n  return segment.startsWith(':');\n}\n","import {\n  Component,\n  SkipSelf,\n  Optional,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { combineLatest, Subject, BehaviorSubject } from 'rxjs';\nimport {\n  tap,\n  takeUntil,\n  distinctUntilChanged,\n  debounceTime,\n  map,\n} from 'rxjs/operators';\nimport { Route, ActiveRoute } from './route';\nimport { Router } from './router.service';\nimport { compareParams } from './route-params.service';\nimport { compareRoutes } from './utils/compare-routes';\nimport { matchRoute, parsePath } from './utils/path-parser';\n\ninterface State {\n  activeRoute: ActiveRoute | null;\n  routes: Route[];\n}\n\ntype UnregisterableRoute = Route & { unregister?: boolean };\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'router',\n  template: '<ng-content></ng-content>',\n})\nexport class RouterComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject();\n  private readonly state$ = new BehaviorSubject<State>({\n    activeRoute: null,\n    routes: [],\n  });\n\n  readonly activeRoute$ = this.state$.pipe(\n    map((state) => state.activeRoute),\n    distinctUntilChanged(this.compareActiveRoutes),\n    takeUntil(this.destroy$)\n  );\n  readonly routes$ = this.state$.pipe(\n    map((state) => state.routes),\n    distinctUntilChanged(this.compareRoutes),\n    takeUntil(this.destroy$)\n  );\n\n  public basePath = '';\n\n  // support multiple \"routers\"\n  // router (base /)\n  // blog(.*?)\n  // router (base /blog)\n  // post1(blog/post1/(.*?)\n  // post2\n  // post3\n\n  constructor(\n    private router: Router,\n    @SkipSelf() @Optional() public parentRouterComponent: RouterComponent\n  ) {}\n\n  ngOnInit() {\n    combineLatest([this.routes$.pipe(debounceTime(1)), this.router.url$])\n      .pipe(\n        distinctUntilChanged(),\n        tap(([routes, url]: [Route[], string]) => {\n          let routeToRender = null;\n          for (const route of routes) {\n            routeToRender = this.isRouteMatch(url, route);\n\n            if (routeToRender) {\n              this.setRoute(url, route);\n              break;\n            }\n          }\n\n          if (!routeToRender) {\n            this.setActiveRoute({ route: null, params: {}, path: '' });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  setRoute(url: string, route: Route) {\n    this.basePath = route.path;\n    const match = matchRoute(url, route);\n    this.setActiveRoute({\n      route,\n      params: match?.params || {},\n      path: match?.path || '',\n    });\n  }\n\n  registerRoute(route: Route) {\n    route.matcher = route.matcher || parsePath(route);\n    this.updateRoutes(route);\n\n    return route;\n  }\n\n  setActiveRoute(activeRoute: ActiveRoute) {\n    this.updateState({ activeRoute });\n  }\n\n  unregisterRoute(route: Route) {\n    this.updateRoutes({ ...route, unregister: true });\n  }\n\n  normalizePath(path: string) {\n    return this.router.normalizePath(path);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  private isRouteMatch(url: string, route: Route) {\n    return route.matcher?.exec(url);\n  }\n\n  private compareActiveRoutes(\n    previous: ActiveRoute,\n    current: ActiveRoute\n  ): boolean {\n    if (previous === current) {\n      return true;\n    }\n    if (!previous) {\n      return false;\n    }\n    return (\n      previous.path === current.path &&\n      compareParams(previous.params, current.params) &&\n      previous.route.path === current.route.path &&\n      previous.route.options.exact === current.route.options.exact\n    );\n  }\n\n  private compareRoutes(previous: Route[], current: Route[]): boolean {\n    if (previous === current) {\n      return true;\n    }\n    if (!previous) {\n      return false;\n    }\n    return (\n      previous.length === current.length &&\n      previous.every((route, i) => route[i] === current[i])\n    );\n  }\n\n  private updateState(newState: Partial<State>) {\n    this.state$.next({ ...this.state$.value, ...newState });\n  }\n\n  private updateRoutes(route: UnregisterableRoute) {\n    const routes = this.state$.value.routes;\n    if (route.unregister) {\n      this.updateState({\n        routes: routes.filter((r) => r.matcher !== route.matcher),\n      });\n    } else {\n      this.updateState({ routes: routes.concat(route).sort(compareRoutes) });\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Type,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ContentChild,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  Self,\n  NgModuleFactory,\n  Compiler,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Subject, BehaviorSubject, of, from } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  takeUntil,\n  mergeMap,\n  withLatestFrom,\n  map,\n} from 'rxjs/operators';\n\nimport { Load, Route, RouteOptions } from './route';\nimport { Params, RouteParams, RoutePath } from './route-params.service';\nimport { RouterComponent } from './router.component';\nimport { Router } from './router.service';\n\nexport function getRouteParams(routeComponent: RouteComponent) {\n  return routeComponent.routeParams$;\n}\n\nexport function getRoutePath(routeComponent: RouteComponent) {\n  return routeComponent.routePath$;\n}\n\ninterface State {\n  params: Params;\n  path: string;\n  shouldRender: boolean;\n}\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'route',\n  template: `\n    <ng-container\n      *ngIf=\"(shouldRender$ | async) && template\"\n      [ngTemplateOutlet]=\"template\"\n    >\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: RouteParams,\n      useFactory: getRouteParams,\n      deps: [[new Self(), RouteComponent]],\n    },\n    {\n      provide: RoutePath,\n      useFactory: getRoutePath,\n      deps: [[new Self(), RouteComponent]],\n    },\n  ],\n})\nexport class RouteComponent implements OnInit, OnDestroy {\n  @ContentChild(TemplateRef) template: TemplateRef<any> | null;\n\n  @Input()\n  get path() {\n    return this._path;\n  }\n\n  set path(value: string) {\n    this._path = this.sanitizePath(value);\n  }\n\n  @Input() component: Type<any>;\n  @Input() load: Load;\n  @Input() reuse = true;\n  @Input() redirectTo!: string;\n  @Input() exact: boolean;\n  @Input() routeOptions: RouteOptions;\n\n  private _path: string;\n  private destroy$ = new Subject();\n  private readonly state$ = new BehaviorSubject<State>({\n    params: {},\n    path: '',\n    shouldRender: false,\n  });\n\n  readonly shouldRender$ = this.state$.pipe(map((state) => state.shouldRender));\n  readonly routeParams$ = this.state$.pipe(\n    map((state) => state.params),\n    distinctUntilChanged(),\n    takeUntil(this.destroy$)\n  );\n  readonly routePath$ = this.state$.pipe(\n    map((state) => state.path),\n    distinctUntilChanged(),\n    takeUntil(this.destroy$)\n  );\n  route!: Route;\n\n  constructor(\n    private router: Router,\n    private routerComponent: RouterComponent,\n    private resolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private compiler: Compiler\n  ) {}\n\n  ngOnInit(): void {\n    // account for root level routes, don't add the basePath\n    const path = this.routerComponent.parentRouterComponent\n      ? this.routerComponent.parentRouterComponent.basePath + this.path\n      : this.path;\n\n    this.route = this.registerRoute(path, this.exact, this.load);\n\n    this.routerComponent.activeRoute$\n      .pipe(\n        filter((ar) => ar !== null),\n        distinctUntilChanged(),\n        withLatestFrom(this.shouldRender$),\n        mergeMap(([current, rendered]) => {\n          if (current.route === this.route) {\n            if (this.redirectTo) {\n              this.router.go(this.redirectTo);\n              return of(null);\n            }\n\n            this.updateState({\n              params: current.params,\n              path: current.path,\n            });\n\n            if (!rendered) {\n              if (!this.reuse) {\n                this.clearView();\n              }\n\n              return this.loadAndRender(current.route);\n            }\n\n            return of(null);\n          } else if (rendered) {\n            return of(this.clearView());\n          }\n\n          return of(null);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.routerComponent.unregisterRoute(this.route);\n    this.destroy$.next();\n  }\n\n  registerRoute(path: string, exact: boolean, load: Load) {\n    return this.routerComponent.registerRoute({\n      path: path,\n      load: load,\n      options: this.routeOptions || { exact: exact },\n    });\n  }\n\n  private loadAndRender(route: Route) {\n    if (route.load) {\n      return from(\n        route.load().then((componentOrModule) => {\n          if (componentOrModule instanceof NgModuleFactory) {\n            const moduleRef = componentOrModule.create(\n              this.viewContainerRef.injector\n            );\n            const component = moduleRef.instance.routeComponent;\n\n            this.renderComponent(component);\n          } else if (componentOrModule.ɵmod) {\n            return this.compiler\n              .compileModuleAsync(componentOrModule as Type<any>)\n              .then((moduleFactory) => {\n                const moduleRef = moduleFactory.create(\n                  this.viewContainerRef.injector\n                );\n                const component = moduleRef.instance.routeComponent;\n                this.renderComponent(component);\n\n                return true;\n              });\n          } else {\n            this.renderComponent(componentOrModule);\n          }\n\n          return true;\n        })\n      );\n    } else {\n      this.showTemplate();\n      return of(true);\n    }\n  }\n\n  private renderComponent(component: Type<any>) {\n    const componentFactory = this.resolver.resolveComponentFactory(component);\n\n    this.showTemplate();\n    this.viewContainerRef.createComponent(\n      componentFactory,\n      this.viewContainerRef.length,\n      this.viewContainerRef.injector\n    );\n  }\n\n  private clearComponent() {\n    this.viewContainerRef.clear();\n    this.hideTemplate();\n  }\n\n  private showTemplate() {\n    setTimeout(() => {\n      this.updateState({ shouldRender: true });\n    });\n  }\n\n  private hideTemplate() {\n    this.updateState({ shouldRender: false });\n  }\n\n  private clearView() {\n    if (this.load) {\n      this.clearComponent();\n    } else {\n      this.hideTemplate();\n    }\n  }\n\n  private sanitizePath(path: string): string {\n    const trimmed = path.trim();\n    return trimmed.startsWith('/') ? trimmed : `/${trimmed}`;\n  }\n\n  private updateState(newState: Partial<State>) {\n    this.state$.next({ ...this.state$.value, ...newState });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  LocationStrategy,\n  PathLocationStrategy,\n  CommonModule,\n} from '@angular/common';\n\nimport { RouterComponent } from './router.component';\nimport { RouteComponent } from './route.component';\nimport { RouteComponentTemplate } from './route-component.directive';\nimport { LinkActive } from './link-active.directive';\nimport { LinkTo } from './link-to.directive';\nimport { UrlParser } from './url-parser';\nimport { QueryParams } from './route-params.service';\nimport { Router } from './router.service';\n\nexport const components = [\n  RouterComponent,\n  RouteComponent,\n  LinkActive,\n  LinkTo,\n  RouteComponentTemplate,\n];\n\nexport function getQueryParams(router: Router) {\n  return router.queryParams$;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [components],\n  exports: [components],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [\n        UrlParser,\n        { provide: LocationStrategy, useClass: PathLocationStrategy },\n        { provide: QueryParams, deps: [Router], useFactory: getQueryParams },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of router\n */\n\nexport * from './lib/link-active.directive';\nexport * from './lib/link-to.directive';\nexport * from './lib/route-component.directive';\nexport * from './lib/router.service';\nexport * from './lib/router.component';\nexport * from './lib/route';\nexport * from './lib/route.component';\nexport * from './lib/router.module';\nexport * from './lib/route-params.service';\nexport * from './lib/url-parser';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["queryString.stringify"],"mappings":"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"}