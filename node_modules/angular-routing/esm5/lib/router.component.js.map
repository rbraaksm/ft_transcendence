{"version":3,"file":"router.component.js","sourceRoot":"ng://angular-routing/","sources":["lib/router.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  SkipSelf,\n  Optional,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { combineLatest, Subject, BehaviorSubject } from 'rxjs';\nimport {\n  tap,\n  takeUntil,\n  distinctUntilChanged,\n  debounceTime,\n  map,\n} from 'rxjs/operators';\nimport { Route, ActiveRoute } from './route';\nimport { Router } from './router.service';\nimport { compareParams } from './route-params.service';\nimport { compareRoutes } from './utils/compare-routes';\nimport { matchRoute, parsePath } from './utils/path-parser';\n\ninterface State {\n  activeRoute: ActiveRoute | null;\n  routes: Route[];\n}\n\ntype UnregisterableRoute = Route & { unregister?: boolean };\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'router',\n  template: '<ng-content></ng-content>',\n})\nexport class RouterComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject();\n  private readonly state$ = new BehaviorSubject<State>({\n    activeRoute: null,\n    routes: [],\n  });\n\n  readonly activeRoute$ = this.state$.pipe(\n    map((state) => state.activeRoute),\n    distinctUntilChanged(this.compareActiveRoutes),\n    takeUntil(this.destroy$)\n  );\n  readonly routes$ = this.state$.pipe(\n    map((state) => state.routes),\n    distinctUntilChanged(this.compareRoutes),\n    takeUntil(this.destroy$)\n  );\n\n  public basePath = '';\n\n  // support multiple \"routers\"\n  // router (base /)\n  // blog(.*?)\n  // router (base /blog)\n  // post1(blog/post1/(.*?)\n  // post2\n  // post3\n\n  constructor(\n    private router: Router,\n    @SkipSelf() @Optional() public parentRouterComponent: RouterComponent\n  ) {}\n\n  ngOnInit() {\n    combineLatest([this.routes$.pipe(debounceTime(1)), this.router.url$])\n      .pipe(\n        distinctUntilChanged(),\n        tap(([routes, url]: [Route[], string]) => {\n          let routeToRender = null;\n          for (const route of routes) {\n            routeToRender = this.isRouteMatch(url, route);\n\n            if (routeToRender) {\n              this.setRoute(url, route);\n              break;\n            }\n          }\n\n          if (!routeToRender) {\n            this.setActiveRoute({ route: null, params: {}, path: '' });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  setRoute(url: string, route: Route) {\n    this.basePath = route.path;\n    const match = matchRoute(url, route);\n    this.setActiveRoute({\n      route,\n      params: match?.params || {},\n      path: match?.path || '',\n    });\n  }\n\n  registerRoute(route: Route) {\n    route.matcher = route.matcher || parsePath(route);\n    this.updateRoutes(route);\n\n    return route;\n  }\n\n  setActiveRoute(activeRoute: ActiveRoute) {\n    this.updateState({ activeRoute });\n  }\n\n  unregisterRoute(route: Route) {\n    this.updateRoutes({ ...route, unregister: true });\n  }\n\n  normalizePath(path: string) {\n    return this.router.normalizePath(path);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  private isRouteMatch(url: string, route: Route) {\n    return route.matcher?.exec(url);\n  }\n\n  private compareActiveRoutes(\n    previous: ActiveRoute,\n    current: ActiveRoute\n  ): boolean {\n    if (previous === current) {\n      return true;\n    }\n    if (!previous) {\n      return false;\n    }\n    return (\n      previous.path === current.path &&\n      compareParams(previous.params, current.params) &&\n      previous.route.path === current.route.path &&\n      previous.route.options.exact === current.route.options.exact\n    );\n  }\n\n  private compareRoutes(previous: Route[], current: Route[]): boolean {\n    if (previous === current) {\n      return true;\n    }\n    if (!previous) {\n      return false;\n    }\n    return (\n      previous.length === current.length &&\n      previous.every((route, i) => route[i] === current[i])\n    );\n  }\n\n  private updateState(newState: Partial<State>) {\n    this.state$.next({ ...this.state$.value, ...newState });\n  }\n\n  private updateRoutes(route: UnregisterableRoute) {\n    const routes = this.state$.value.routes;\n    if (route.unregister) {\n      this.updateState({\n        routes: routes.filter((r) => r.matcher !== route.matcher),\n      });\n    } else {\n      this.updateState({ routes: routes.concat(route).sort(compareRoutes) });\n    }\n  }\n}\n"]}