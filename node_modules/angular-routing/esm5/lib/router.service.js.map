{"version":3,"file":"router.service.js","sourceRoot":"ng://angular-routing/","sources":["lib/router.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { PlatformLocation, Location } from '@angular/common';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport * as queryString from 'query-string';\n\nimport { UrlParser } from './url-parser';\nimport { Params, compareParams } from './route-params.service';\n\ninterface State {\n  url: string;\n  queryParams: Params;\n  hash: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Router {\n  private readonly state$ = new BehaviorSubject<State>({\n    url: this.location.path(),\n    queryParams: {},\n    hash: '',\n  });\n\n  readonly url$ = this.state$.pipe(\n    map((state) => state.url),\n    distinctUntilChanged()\n  );\n  readonly hash$ = this.state$.pipe(\n    map((state) => state.hash),\n    distinctUntilChanged()\n  );\n  readonly queryParams$ = this.state$.pipe(\n    map((state) => state.queryParams),\n    distinctUntilChanged(compareParams)\n  );\n\n  constructor(\n    private location: Location,\n    private platformLocation: PlatformLocation,\n    private urlParser: UrlParser\n  ) {\n    this.location.subscribe(() => {\n      this.nextState(this.getLocation());\n    });\n\n    this.nextState(this.getLocation());\n  }\n\n  go(url: string, queryParams?: Params, hash?: string) {\n    this.location.go(this.serializeUrl(url, queryParams, hash));\n\n    this.nextState(this.getLocation());\n  }\n\n  replace(url: string, queryParams?: Params, hash?: string) {\n    this.location.replaceState(this.serializeUrl(url, queryParams, hash));\n\n    this.nextState(this.getLocation());\n  }\n\n  serializeUrl(url: string, queryParams?: Params, hash?: string) {\n    // if relative path\n    if (!url.startsWith('/')) {\n      url = this.urlParser.joinUrls(this.location.path(), url);\n    }\n\n    return (\n      url +\n      (queryParams ? `?${queryString.stringify(queryParams)}` : '') +\n      `${hash ? '#' + hash : ''}`\n    );\n  }\n\n  getExternalUrl(url: string) {\n    return this.location.prepareExternalUrl(url);\n  }\n\n  parseSearchParams(searchParams: URLSearchParams) {\n    const queryParams: Params = {};\n\n    searchParams.forEach((value, key) => {\n      queryParams[key] = value;\n    });\n\n    return queryParams;\n  }\n\n  normalizePath(path: string) {\n    return this.location.normalize(path);\n  }\n\n  private getLocation() {\n    return this.platformLocation.href;\n  }\n\n  private nextState(url: string) {\n    const parsedUrl = this._parseUrl(url);\n\n    this.state$.next({\n      url: parsedUrl.pathname,\n      queryParams: this.parseSearchParams(parsedUrl.searchParams),\n      hash: parsedUrl.hash ? parsedUrl.hash.split('#')[0] : '',\n    });\n  }\n\n  private _parseUrl(path: string): URL {\n    return this.urlParser.parse(path);\n  }\n}\n"]}