<<<<<<< HEAD
=======
import { executeSchedule } from '../util/executeSchedule';
>>>>>>> rene
import { operate } from '../util/lift';
import { OperatorSubscriber } from './OperatorSubscriber';
export function observeOn(scheduler, delay = 0) {
    return operate((source, subscriber) => {
<<<<<<< HEAD
        source.subscribe(new OperatorSubscriber(subscriber, (value) => subscriber.add(scheduler.schedule(() => subscriber.next(value), delay)), () => subscriber.add(scheduler.schedule(() => subscriber.complete(), delay)), (err) => subscriber.add(scheduler.schedule(() => subscriber.error(err), delay))));
=======
        source.subscribe(new OperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));
>>>>>>> rene
    });
}
//# sourceMappingURL=observeOn.js.map